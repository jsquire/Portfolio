#   ╔═╗╔╦╗╦╔╦╗╔═╗╦═╗┌─┐┌─┐┌┐┌┌─┐┬┌─┐
#   ║╣  ║║║ ║ ║ ║╠╦╝│  │ ││││├┤ ││ ┬
#  o╚═╝═╩╝╩ ╩ ╚═╝╩╚═└─┘└─┘┘└┘└  ┴└─┘
#
# This file (`.editorconfig`) exists to help maintain consistent formatting
# throughout this package, the Sails framework, and the Node-Machine project.
#
# To review what each of these options mean, see:
# http://editorconfig.org/
# https://github.com/editorconfig/editorconfig/wiki/EditorConfig-Properties

root = true

[*]
indent_style             = space
indent_size              = 4
charset                  = utf-8
end_of_line              = lf
trim_trailing_whitespace = true
insert_final_newline     = false
curly_bracket_next_line  = true
indent_brace_style       = Allman

[*.md]
trim_trailing_whitespace = false

[*.cs]
# New line preferences
csharp_new_line_before_open_brace = all # vs-default: any
csharp_new_line_before_else = true # vs-default: true
csharp_new_line_before_catch = true # vs-default: true
csharp_new_line_before_finally = true # vs-default: true
csharp_new_line_before_members_in_object_initializers = true # vs-default: true
csharp_new_line_before_members_in_anonymous_types = true # vs-default: true
csharp_new_line_between_query_expression_clauses = true # vs-default: true

# Indentation preferences
csharp_indent_block_contents = true # vs-default: true
csharp_indent_braces = false # vs-default: false
csharp_indent_case_contents = true # vs-default: true
csharp_indent_case_contents_when_block = true
csharp_indent_switch_labels = true # vs-default: true
csharp_indent_labels = one_less_than_current # vs-default: one_less_than_current

# Modifier preferences
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:suggestion

# var all the things!!!
csharp_style_var_for_built_in_types = true:suggestion # vs-default: true:none
csharp_style_var_when_type_is_apparent = true:suggestion # vs-default: true:none
csharp_style_var_elsewhere = true:suggestion # vs-default: true:none

# use language keywords instead of BCL types
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion # vs-default: true:none
dotnet_style_predefined_type_for_member_access = true:suggestion # vs-default: true:none

# name all constant fields using PascalCase
dotnet_naming_rule.constant_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.constant_fields_should_be_pascal_case.symbols = constant_fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.style = pascal_case_style

dotnet_naming_symbols.constant_fields.applicable_kinds = field
dotnet_naming_symbols.constant_fields.required_modifiers = const

dotnet_naming_style.pascal_case_style.capitalization = pascal_case

# Code style defaults
csharp_using_directive_placement = outside_namespace:suggestion
dotnet_sort_system_directives_first = true # vs-default: true
csharp_prefer_braces = true:refactoring
csharp_preserve_single_line_blocks = true # vs-default: true
csharp_preserve_single_line_statements = false # vs-default: true
csharp_prefer_static_local_function = true:suggestion
csharp_prefer_simple_using_statement = false:none
csharp_style_prefer_switch_expression = true:suggestion
csharp_style_namespace_declarations = file_scoped:suggestion
csharp_style_prefer_interpolated_strings = true:suggestion

# Code quality
dotnet_style_readonly_field = true:suggestion
dotnet_code_quality_unused_parameters = non_public:suggestion

# Expression-level preferences
dotnet_style_object_initializer = true:suggestion # vs-default: true:suggestion
dotnet_style_collection_initializer = true:suggestion # vs-default: true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion # vs-default: true:suggestion
dotnet_style_coalesce_expression = true:suggestion # vs-default: true:suggestion
dotnet_style_null_propagation = true:suggestion # vs-default: true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_auto_properties = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:refactoring
dotnet_style_prefer_conditional_expression_over_return = true:refactoring
csharp_prefer_simple_default_expression = true:suggestion

# Expression-bodied members
csharp_style_expression_bodied_methods = true:none # vs-default: false:none
csharp_style_expression_bodied_constructors = true:none # vs-default: false:none
csharp_style_expression_bodied_operators = true:none # vs-default: false:none
csharp_style_expression_bodied_properties = true:none # vs-default: true:none
csharp_style_expression_bodied_indexers = true:none # vs-default: true:none
csharp_style_expression_bodied_accessors = true:none # vs-default: true:none
csharp_style_expression_bodied_lambdas = true:refactoring
csharp_style_expression_bodied_local_functions = true:refactoring

# Pattern matching
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion # vs-default: true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion # vs-default: true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion # vs-default: true:suggestion

# Null checking preferences
csharp_style_throw_expression = true:suggestion # vs-default: true:suggestion
csharp_style_conditional_delegate_call = true:suggestion # vs-default: true:suggestion

# Other features
csharp_style_prefer_index_operator = false:none
csharp_style_prefer_range_operator = false:none
csharp_style_pattern_local_over_anonymous_function = false:none

# Space preferences
csharp_space_after_cast = false # vs-default: false
csharp_space_after_colon_in_inheritance_clause = true # vs-default: true
csharp_space_after_comma = true # vs-default: true
csharp_space_after_dot = false # vs-default: false
csharp_space_after_keywords_in_control_flow_statements = true # vs-default: true
csharp_space_after_semicolon_in_for_statement = true # vs-default: true
csharp_space_around_binary_operators = before_and_after # vs-default: before_and_after
csharp_space_around_declaration_statements = do_not_ignore # vs-default: false
csharp_space_before_colon_in_inheritance_clause = true # vs-default: true
csharp_space_before_comma = false # vs-default: false
csharp_space_before_dot = false # vs-default: false
csharp_space_before_open_square_brackets = false # vs-default: false
csharp_space_before_semicolon_in_for_statement = false # vs-default: false
csharp_space_between_empty_square_brackets = false # vs-default: false
csharp_space_between_method_call_empty_parameter_list_parentheses = false # vs-default: false
csharp_space_between_method_call_name_and_opening_parenthesis = false # vs-default: false
csharp_space_between_method_call_parameter_list_parentheses = false # vs-default: false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false # vs-default: false
csharp_space_between_method_declaration_name_and_open_parenthesis = false # vs-default: false
csharp_space_between_method_declaration_parameter_list_parentheses = false # vs-default: false
csharp_space_between_parentheses = false # vs-default: false
csharp_space_between_square_brackets = false # vs-default: false

# Require accessibility modifiers
dotnet_style_require_accessibility_modifiers = for_non_interface_members:suggestion # vs-default: for_non_interface_members:none

# Analyzers
dotnet_code_quality.ca1802.api_surface = private, internal